name: main-latest

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * *' # Scheduled runs every day at 3am UTC 

permissions:
  contents: write
  packages: write
  actions: write # For keepalive (last step)

env:
  # This image's versions, image will be tagged with the combinations (:MAJOR, :MAJOR.MINOR, :MAJOR.MINOR.PATCH) plus "latest"
  MAJOR: "0"
  MINOR: "2"
  PATCH: "1"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: ShellCheck
        uses: ludeeus/action-shellcheck@2.0.0
        with:
          additional_files: 'kube-dump'

      - name: Setup the latest version of Helm
        uses: azure/setup-helm@v4.2.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }} # github username or org
          password: ${{ secrets.GITHUB_TOKEN }}    # github actions builtin token. repo has to have pkg access.

      - name: Helm login to GitHub Container Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io/${{ github.repository_owner }} --username ${{ github.actor }} --password-stdin

      - name: Build and push the Docker image
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          pull: true # Pull new version of base image, always
          push: true
          labels: |
            org.opencontainers.image.title=${{ github.repository }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
          cache-from: type=gha # all-automatic Github Actions caching
          cache-to: type=gha,mode=max
          tags: ghcr.io/${{ github.repository }}:latest,ghcr.io/${{ github.repository }}:${{env.MAJOR}}.${{env.MINOR}}.${{env.PATCH}},ghcr.io/${{ github.repository }}:${{env.MAJOR}}.${{env.MINOR}},ghcr.io/${{ github.repository }}:${{env.MAJOR}}

      - name: Patch the versions in the Chart.yaml and the image reference in values.yaml
        run: |
          sed -i "s|^appVersion: .*|appVersion: \"${{env.MAJOR}}.${{env.MINOR}}.${{env.PATCH}}\" # set by GHA at $(date)|" charts/kube-dump/Chart.yaml
          sed -i "s|^version: .*|version: \"${{env.MAJOR}}.${{env.MINOR}}.${{env.PATCH}}\" # set by GHA at $(date)|" charts/kube-dump/Chart.yaml
          sed -i "s|^  repository: .*|  repository: \"ghcr.io/${{ github.repository }}\" # set by GHA at $(date)|" charts/kube-dump/values.yaml
          git diff || true

      - name: Create Helm Chart package tgz
        run: helm package charts/kube-dump

      - name: Push Helm chart tgz to oci -chart package
        run: helm push kube-dump-*.tgz oci://ghcr.io/${{ github.repository }}-chart

      - name: Commit changes and push (GHA keepalive)
        run: |
          rm -f kube-dump-*.tgz # don't add the temp helm tgz
          git config --global user.name "GHA workflow"
          git config --global user.email "workflow@github.com"
          git add . || true
          git commit -m "gha: auto-updated after build ${{ github.run_number }} at $(date)" || true
          git push || { echo "Push failed, retrying"; sleep $((1 + $RANDOM % 10)); git pull --rebase; git push; }
          git push || { echo "Push failed, retrying"; sleep $((1 + $RANDOM % 10)); git pull --rebase; git push; }
